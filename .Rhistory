dbWriteTable(covid_db, 'counties', df, overwrite = TRUE)
covid_db <- dbConnect(RSQLite::SQLite(), 'data/covid_db.sqlite')
dat <- tbl(covid_db, 'counties') %>%
select(countyFIPS, date, case_count, per_delta, infect_prob, r_t, deaths, doubling, r_t_seven, r_t_three) %>%
distinct() %>%
collect()
dat <- data.table(dat)
dat <- dat[as.Date(dat$date) >= '2020-03-01',]
# dat <- jsonlite::fromJSON(paste0('http://160.1.89.242/alldata?min_date=20200301&max_date=', gsub('-', '', Sys.Date() - 1)))
# dat <- data.table(dat)
dat[, r_t := round(r_t, 2)]
dat[, r_t_three := round(r_t_three, 2)]
dat[, r_t_seven := round(r_t_seven, 2)]
dat[, per_delta := round(per_delta* 100, 2) ]
dat[, infect_prob := round(infect_prob, 2) ]
#---make wide timeseries data - every variable/date combo gets a column
u_id <- unique(dat$countyFIPS)
out <- list()
pb <- txtProgressBar(max = length(u_id), style = 3)
for(i in 1:length(u_id)){
sub <- dat[countyFIPS == u_id[i]]
sub <- unique(sub, by=c("countyFIPS", "date"))
out_tmp <- list()
for(j in 1:nrow(sub)){
cols <- paste0(colnames(sub)[3:ncol(sub)],'_', gsub('-', '', sub$date[j]))
tmp <- data.frame(sub[j, 3:ncol(sub)])
colnames(tmp) <- cols
out_tmp[[j]] <- tmp
}
z <- cbind(sub[1, 1], do.call('cbind', out_tmp))
out[[i]] <- z
setTxtProgressBar(pb, i)
}
final <- rbindlist(out)
#merge into county shapes
county_shapes <- readRDS('data/all_counties.RDS')
rn <- row.names(county_shapes@data)
county_shapes$STATE <- as.character(county_shapes$STATE)
county_shapes$COUNTY <- as.character(county_shapes$COUNTY)
county_shapes$FIPS <- paste0(county_shapes$STATE, county_shapes$COUNTY)
county_shapes <- sp::merge(county_shapes, final, by.x = 'FIPS', by.y = 'countyFIPS')
row.names(county_shapes) <- rn
#geojsonio::geojson_write(county_shapes, file = "data/bigmap/ts.geojson")
geojsonio::geojson_write(county_shapes, file = "~/working/bigmap/ts.geojson")
geojsonio::geojson_write(county_shapes, file = "~/working/bigmap_alt/ts.geojson")
setwd('~/working/bigmap')
system('git add --all')
system('git commit -m "update"')
system('git push')
setwd('~/working/bigmap_alt')
system('git add --all')
system('git commit -m "update"')
system('git push')
print(paste0('Successful update at: ', Sys.time()))
update_history <- read.csv('~/working/cov_api/update_history.csv', stringsAsFactors = FALSE)
update_history <- rbind(update_history, data.frame(date = as.character(Sys.time())))
write.csv(update_history, '~/working/cov_api/update_history.csv', row.names = FALSE)
}
} else{
print(paste0('No update at: ', Sys.time()))
}
#---load cadets
library(data.table)
source('~/Documents/projects/Elo/interact_with_api.R')
df <- fread('~/Downloads/cft2_roster.csv')
df$SECTION <- 2
df <- fread('~/Downloads/cft_round2.csv')
df <- df[SECTION == 2]
#clean names
parse_name <- function(n){
num_space <- sum(unlist(strsplit(n, '')) == ' ')
if(num_space == 1){
last <- gsub('(.+) .+', '\\1', n)
first <- gsub('.+ (.+)', '\\1', n)
middle <- ''
} else if(num_space == 2){
last <- gsub('(.+) .+ .+', '\\1', n)
first <- gsub('.+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ (.+)', '\\1', n)
} else if(num_space == 3){
last <- gsub('(.+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ (.+)', '\\1', n)
} else if(num_space == 4){
last <- gsub('(.+ .+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ .+ (.+)', '\\1', n)
} else{
last <- first <- middle <- NA
}
return(data.table(first, middle, last))
}
#---add cft2
out <- lapply(df$NAME, parse_name)
final <- rbindlist(out)
df <- cbind(df, final)
df <- df[, c('first','middle','last','EMAIL')]
df$rank <- 'CDT'
colnames(df)[4] <- 'email'
df <- fread('~/Downloads/cft_round2.csv')
#clean names
parse_name <- function(n){
num_space <- sum(unlist(strsplit(n, '')) == ' ')
if(num_space == 1){
last <- gsub('(.+) .+', '\\1', n)
first <- gsub('.+ (.+)', '\\1', n)
middle <- ''
} else if(num_space == 2){
last <- gsub('(.+) .+ .+', '\\1', n)
first <- gsub('.+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ (.+)', '\\1', n)
} else if(num_space == 3){
last <- gsub('(.+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ (.+)', '\\1', n)
} else if(num_space == 4){
last <- gsub('(.+ .+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ .+ (.+)', '\\1', n)
} else{
last <- first <- middle <- NA
}
return(data.table(first, middle, last))
}
#---add cft2
out <- lapply(df$NAME, parse_name)
final <- rbindlist(out)
df <- cbind(df, final)
df <- df[, c('first','middle','last','EMAIL')]
df$rank <- 'CDT'
colnames(df)[4] <- 'email'
View(df)
df <- fread('~/Downloads/cft2_roster.csv')
df <- df[SECTION == 2]
df <- fread('~/Downloads/cft2_roster.csv')
#clean names
parse_name <- function(n){
num_space <- sum(unlist(strsplit(n, '')) == ' ')
if(num_space == 1){
last <- gsub('(.+) .+', '\\1', n)
first <- gsub('.+ (.+)', '\\1', n)
middle <- ''
} else if(num_space == 2){
last <- gsub('(.+) .+ .+', '\\1', n)
first <- gsub('.+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ (.+)', '\\1', n)
} else if(num_space == 3){
last <- gsub('(.+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ (.+)', '\\1', n)
} else if(num_space == 4){
last <- gsub('(.+ .+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ .+ (.+)', '\\1', n)
} else{
last <- first <- middle <- NA
}
return(data.table(first, middle, last))
}
View(df)
df <- df[SECTION == 2]
#clean names
parse_name <- function(n){
num_space <- sum(unlist(strsplit(n, '')) == ' ')
if(num_space == 1){
last <- gsub('(.+) .+', '\\1', n)
first <- gsub('.+ (.+)', '\\1', n)
middle <- ''
} else if(num_space == 2){
last <- gsub('(.+) .+ .+', '\\1', n)
first <- gsub('.+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ (.+)', '\\1', n)
} else if(num_space == 3){
last <- gsub('(.+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ (.+)', '\\1', n)
} else if(num_space == 4){
last <- gsub('(.+ .+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ .+ (.+)', '\\1', n)
} else{
last <- first <- middle <- NA
}
return(data.table(first, middle, last))
}
#---add cft2
out <- lapply(df$NAME, parse_name)
final <- rbindlist(out)
df <- cbind(df, final)
df <- df[, c('first','middle','last','EMAIL')]
df$rank <- 'CDT'
colnames(df)[4] <- 'email'
View(df)
add_people(df)
View(df)
#--cft2
df <- fread('~/Downloads/cft2_roster.csv')
df <- df[SECTION == 2]
out <- lapply(df$NAME, parse_name)
final <- rbindlist(out)
df <- cbind(df, final)
df[, squadID := paste0(SUMCO, SUMPLT, SUMSQD)]
df <- df[, c('first','middle','last','EMAIL', 'squadID')]
df$rank <- 'CDT'
colnames(df)[4] <- 'email'
#get user ID's from DB
p <- get_people()
p <- data.table(p)
df$db_id <- ''
for(i in 1:nrow(df)){
df[i, 'db_id'] <- p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]
}
i
p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]
p_df <- df[i]
p_df
for(i in 1:nrow(df)){
if(nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]) == 0){
p_df <- df[i]
add_people(p_df)
}
}
i
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id])
p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]
length(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]) == 0
for(i in 1:nrow(df)){
if(length(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]) == 0){
p_df <- df[i]
add_people(p_df)
print(p_df)
}
}
i
p_df <- df[i]
p_df
p_df <- df[i, -c('db_id')]
p_df
add_people(p_df)
p_df <- df[i, -c('db_id', 'squadID', 'rank')]
p_df
add_people(p_df)
add_people
p_df
dat <- p_df
#first, run some checks to make sure we're not duping anything
p <- get_people()
p$id <- NULL
for(i in 1:nrow(dat)){
tmp <- rbind(dat, p)
if(TRUE %in% duplicated(tmp)){
stop(paste0('Attempted to add a duplicate person: ', dat$rank[i], ' ', dat$first[i], ' ', dat$last[i]))
}
}
nrow(dat)
dat
tmp <- rbind(dat, p)
p
dat
ncol(dat)
p_df <- df[i, -c('db_id', 'squadID')]
p_df
dat <- p_df
tmp <- rbind(dat, p)
tmp
TRUE %in% duplicated(tmp)
stop(paste0('Attempted to add a duplicate person: ', dat$rank[i], ' ', dat$first[i], ' ', dat$last[i]))
i
#find people not in the data
for(i in 1:nrow(df)){
if(length(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]) == 0){
p_df <- df[i, -c('db_id', 'squadID')]
add_people(p_df)
print(p_df)
}
}
i
if(length(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]) == 0){
p_df <- df[i, -c('db_id', 'squadID')]
add_people(p_df)
print(p_df)
}
id
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]])
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]])
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]])
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]])
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]])
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]])
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]])
p
#get user ID's from DB
p <- get_people()
p <- data.table(p)
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]]) == 0
for(i in 1:nrow(df)){
if(nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]]) == 0){
p_df <- df[i, -c('db_id', 'squadID')]
add_people(p_df)
print(p_df)
}
}
df$db_id <- ''
for(i in 1:nrow(df)){
df[i, 'db_id'] <- p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]
}
i
p <- get_people()
p <- data.table(p)
df$db_id <- ''
for(i in 1:nrow(df)){
df[i, 'db_id'] <- p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]
}
View(df)
#create experiments by squad
u_squad <- unique(df$squadID)
u_squad
table(df$squadID)
u_squad %in% ('242','331','332','342')
#create experiments by squad
u_squad <- unique(df$squadID)
u_squad %in% c('242','331','332','342')
u_squad[!u_squad %in% c('242','331','332','342')]
u_squad <- u_squad[!u_squad %in% c('242','331','332','342')]
for(i in 1:length(u_squad)){
sub <- df[squadID == u_squad[i]]
ids <- as.numeric(sub[, db_id])
name <- paste0('CFT2 Closeness Squad: ', u_squad[i])
add_closeness_experiment(name, 'Ian Kloo', ids)
}
i
name
View(df)
#---load cadets
library(data.table)
source('~/Documents/projects/Elo/interact_with_api.R')
df <- fread('~/Downloads/cft2_roster.csv')
df <- df[SECTION == 2]
#clean names
parse_name <- function(n){
num_space <- sum(unlist(strsplit(n, '')) == ' ')
if(num_space == 1){
last <- gsub('(.+) .+', '\\1', n)
first <- gsub('.+ (.+)', '\\1', n)
middle <- ''
} else if(num_space == 2){
last <- gsub('(.+) .+ .+', '\\1', n)
first <- gsub('.+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ (.+)', '\\1', n)
} else if(num_space == 3){
last <- gsub('(.+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ (.+)', '\\1', n)
} else if(num_space == 4){
last <- gsub('(.+ .+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ .+ (.+)', '\\1', n)
} else{
last <- first <- middle <- NA
}
return(data.table(first, middle, last))
}
#---add cft2
out <- lapply(df$NAME, parse_name)
final <- rbindlist(out)
df <- cbind(df, final)
df <- df[, c('first','middle','last','EMAIL')]
df$rank <- 'CDT'
colnames(df)[4] <- 'email'
df
#fix known error
#df[NAME == 'HURST IAN R', 'SUMCO'] <- 7
#df[NAME == 'HURST IAN R', 'SUMPLT'] <- 4
#df[NAME == 'HURST IAN R', 'SUMSQD'] <- 3
#df[NAME == 'HURST IAN R', 'SECTION'] <- 2
df[NAME == 'FELTER DARBY B']
df <- fread('~/Downloads/cft2_roster.csv')
#fix known error
#df[NAME == 'HURST IAN R', 'SUMCO'] <- 7
#df[NAME == 'HURST IAN R', 'SUMPLT'] <- 4
#df[NAME == 'HURST IAN R', 'SUMSQD'] <- 3
#df[NAME == 'HURST IAN R', 'SECTION'] <- 2
df[NAME == 'FELTER DARBY B']
#fix known error
#df[NAME == 'HURST IAN R', 'SUMCO'] <- 7
#df[NAME == 'HURST IAN R', 'SUMPLT'] <- 4
#df[NAME == 'HURST IAN R', 'SUMSQD'] <- 3
#df[NAME == 'HURST IAN R', 'SECTION'] <- 2
df[NAME == 'FELTER DARBY B', 'SECTION'] <- 1
df[NAME == 'LUCENA CARSON D', 'SECTION']
df[NAME == 'LUCENA CARSON D', 'SECTION'] <- 1
df[NAME == 'LUCENA CARSON D', 'SECTION']
df[NAME == 'VERMA VANI', 'SECTION']
df[NAME == 'VERMA VANI', 'SECTION'] <- 1
df[NAME == 'WEISGRAM SPENCER J', 'SECTION']
df[NAME == 'WEISGRAM SPENCER J', 'SECTION'] <- 1
df <- df[SECTION == 2]
#clean names
parse_name <- function(n){
num_space <- sum(unlist(strsplit(n, '')) == ' ')
if(num_space == 1){
last <- gsub('(.+) .+', '\\1', n)
first <- gsub('.+ (.+)', '\\1', n)
middle <- ''
} else if(num_space == 2){
last <- gsub('(.+) .+ .+', '\\1', n)
first <- gsub('.+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ (.+)', '\\1', n)
} else if(num_space == 3){
last <- gsub('(.+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ (.+)', '\\1', n)
} else if(num_space == 4){
last <- gsub('(.+ .+ .+) .+ .+', '\\1', n)
first <- gsub('.+ .+ .+ (.+) .+', '\\1', n)
middle <- gsub('.+ .+ .+ .+ (.+)', '\\1', n)
} else{
last <- first <- middle <- NA
}
return(data.table(first, middle, last))
}
#---add cft2
out <- lapply(df$NAME, parse_name)
final <- rbindlist(out)
df <- cbind(df, final)
df <- df[, c('first','middle','last','EMAIL')]
df$rank <- 'CDT'
colnames(df)[4] <- 'email'
df
add_people(df)
#--cft2
df <- fread('~/Downloads/cft2_roster.csv')
#fix known error
#df[NAME == 'HURST IAN R', 'SUMCO'] <- 7
#df[NAME == 'HURST IAN R', 'SUMPLT'] <- 4
#df[NAME == 'HURST IAN R', 'SUMSQD'] <- 3
#df[NAME == 'HURST IAN R', 'SECTION'] <- 2
df[NAME == 'FELTER DARBY B', 'SECTION'] <- 1
df[NAME == 'LUCENA CARSON D', 'SECTION'] <- 1
df[NAME == 'VERMA VANI', 'SECTION'] <- 1
df[NAME == 'WEISGRAM SPENCER J', 'SECTION'] <- 1
df <- df[SECTION == 2]
out <- lapply(df$NAME, parse_name)
#--cft2
df <- fread('~/Downloads/cft2_roster.csv')
#fix known error
#df[NAME == 'HURST IAN R', 'SUMCO'] <- 7
#df[NAME == 'HURST IAN R', 'SUMPLT'] <- 4
#df[NAME == 'HURST IAN R', 'SUMSQD'] <- 3
#df[NAME == 'HURST IAN R', 'SECTION'] <- 2
df[NAME == 'FELTER DARBY B', 'SECTION'] <- 1
df[NAME == 'LUCENA CARSON D', 'SECTION'] <- 1
df[NAME == 'VERMA VANI', 'SECTION'] <- 1
df[NAME == 'WEISGRAM SPENCER J', 'SECTION'] <- 1
df <- df[SECTION == 2]
out <- lapply(df$NAME, parse_name)
final <- rbindlist(out)
df <- cbind(df, final)
df[, squadID := paste0(SUMCO, SUMPLT, SUMSQD)]
df <- df[, c('first','middle','last','EMAIL', 'squadID')]
df$rank <- 'CDT'
colnames(df)[4] <- 'email'
#get user ID's from DB
p <- get_people()
p <- data.table(p)
#find people not in the data
for(i in 1:nrow(df)){
if(nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]]) == 0){
p_df <- df[i, -c('db_id', 'squadID')]
add_people(p_df)
print(p_df)
}
}
warnings()
#get user ID's from DB
p <- get_people()
p <- data.table(p)
i <- 1
nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]]) == 0
#find people not in the data
for(i in 1:nrow(df)){
if(nrow(p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email]]) == 0){
p_df <- df[i, -c('db_id', 'squadID')]
add_people(p_df)
print(p_df)
}
}
p <- get_people()
p <- data.table(p)
df$db_id <- ''
df
for(i in 1:nrow(df)){
df[i, 'db_id'] <- p[first == df[i, first] & middle == df[i, middle] & last == df[i, last] & email == df[i, email], id]
}
View(df)
is.null(df$db_id)
is.na(df$db_id)
which(is.null(df$db_id))
which(is.na(df$db_id))
#create experiments by squad
u_squad <- unique(df$squadID)
table(df$squadID)
for(i in 1:length(u_squad)){
sub <- df[squadID == u_squad[i]]
ids <- as.numeric(sub[, db_id])
name <- paste0('CFT2 Closeness Squad: ', u_squad[i])
add_closeness_experiment(name, 'Ian Kloo', ids)
}
#--check work
exp <- get_closeness_experiments()
exp <- data.table(exp)
length(grep('CFT2', exp$title))
